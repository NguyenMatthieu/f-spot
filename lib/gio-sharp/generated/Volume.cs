// This file was generated by the Gtk# code generator.
// Any changes made will be lost if regenerated.

namespace GLib {

	using System;

#region Autogenerated code
	public interface Volume : GLib.IWrapper {

		event System.EventHandler Changed;
		event System.EventHandler Removed;
		GLib.Icon Icon { 
			get;
		}
		bool MountFinish(GLib.AsyncResult result);
		bool CanEject();
		string EnumerateIdentifiers();
		void EjectWithOperation(GLib.MountUnmountFlags flags, GLib.MountOperation mount_operation, GLib.Cancellable cancellable, GLib.AsyncReadyCallback cb);
		void Mount(GLib.MountMountFlags flags, GLib.MountOperation mount_operation, GLib.Cancellable cancellable, GLib.AsyncReadyCallback cb);
		void Eject(GLib.MountUnmountFlags flags, GLib.Cancellable cancellable, GLib.AsyncReadyCallback cb);
		string Name { 
			get;
		}
		GLib.Drive Drive { 
			get;
		}
		string GetIdentifier(string kind);
		bool ShouldAutomount();
		bool CanMount();
		GLib.File ActivationRoot { 
			get;
		}
		GLib.Mount MountInstance { 
			get;
		}
		bool EjectWithOperationFinish(GLib.AsyncResult result);
		string Uuid { 
			get;
		}
		bool EjectFinish(GLib.AsyncResult result);
	}
#endregion
}
